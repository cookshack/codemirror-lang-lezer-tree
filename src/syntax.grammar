@precedence {
}

//// Templates.

list<x> { (x ",")* x? }

//// Root.

@top Tree { Top }

Top { node | special | error }

node { Name Ch? }

special { specialName }

Name { name }

Ch { "(" list<Special | Node | Error> ")" }

Node { node }

Special { special }

Error { error }

error { @specialize<specialName, "âš "> }

//// Tokens.

@skip { whitespace | LineComment }

@tokens {
  whitespace { ($[ \t\r\n] | "\r"? "\n")+ }

  // from lezer grammar token "name"
  // why \u{a1}? (inverted !, number 161, top of ascii is DEL \u{7f} 127)
  // \u{10ffff} is last unicode char
  //nameChar { @asciiLetter | @digit | $[\-_\u{a1}-\u{10ffff}] }
  //nameCharLower { @asciiLowercase | @digit | $[\-_\u{a1}-\u{10ffff}] }
  nameChar { ![#()\\,] | "\\" $[#()\\,] }
  nameCharLower { ![A-Z#()\\,] | "\\" $[#()\\,] }

  specialName { nameCharLower nameChar* }
  name { nameChar+ }
  LineComment[isolate] { "#" ![\n\r]* }
  @precedence { whitespace, specialName, name }
}

//// Highlight.

@external propSource highlighting from "./highlight"
